# -*- coding: utf-8 -*-
"""FeatureSelection2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WYYPy-mv8g4Qg6m-hVYzDF4AxGMVyS71
"""

# Load libraries
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import TruncatedSVD
from scipy.sparse import csr_matrix
from sklearn import datasets
import numpy as np

# Load the data
breast_cancer = datasets.load_breast_cancer()

# Standardize the feature matrix
X = StandardScaler().fit_transform(breast_cancer.data)

# Make sparse matrix
X_sparse = csr_matrix(X)

print(X_sparse)

tsvd = TruncatedSVD(n_components=X_sparse.shape[1]-1)
X_tsvd = tsvd.fit(X)

X_sparse.shape[1]

tsvd_var_ratios = tsvd.explained_variance_ratio_

for n in tsvd_var_ratios:
    print(n)

def select_n_components(var_ratio, goal_var: float) -> int:
    # Set initial variance explained so far
    total_variance = 0.0
    
    # Set initial number of features
    n_components = 0
    
    # For the explained variance of each feature:
    for explained_variance in var_ratio:
        
        # Add the explained variance to the total
        total_variance += explained_variance
        
        # Add one to the number of components
        n_components += 1
        
        # If we reach our goal level of explained variance
        if total_variance >= goal_var:
            # End the loop
            break
            
    # Return the number of components
    return n_components

    
select_n_components(tsvd_var_ratios, 0.9)